services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: securetflow-postgres
    environment:
      POSTGRES_DB: securet_flow
      POSTGRES_USER: securet_user
      POSTGRES_PASSWORD: securet_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - securet-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: securetflow-redis
    user: "999:999"  # Non-root user
    ports:
      - "6379:6379"
    networks:
      - securet-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Backend API
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: securetflow-backend
    user: "1000:1000"  # Non-root user
    environment:
      - DATABASE_URL=postgresql://securet_user:securet_password@postgres:5432/securet_flow
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DEBUG=${DEBUG}
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - ./src/backend:/app
    networks:
      - securet-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Frontend
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    container_name: securetflow-frontend
    user: "1000:1000"  # Non-root user
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - securet-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: securetflow-nginx
    user: "101:101"  # Nginx user
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    networks:
      - securet-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

volumes:
  postgres_data:

networks:
  securet-network:
    driver: bridge 